# Elasticsearch vars
es_data_dirs:
  - "/opt/data/elastic/data"
es_log_dir: "/opt/data/elastic/log"
es_instance_name: "wai" 
es_api_port: 9200
es_heap_size: "{{ (ansible_memtotal_mb * 0.5) | int }}m"
es_enable_xpack: true
es_xpack_features:
  - monitoring
  - security
es_enable_auto_ssl_configuration: true            
es_enable_http_ssl: true
es_enable_transport_ssl: true
es_ssl_verification_mode: none
es_validate_certs: true
es_api_basic_auth_username: elastic
es_api_basic_auth_password: "{{ elasticsearch_secrets.elastic_api }}"
es_users:
  native:
    elastic:
      password: "{{ elasticsearch_secrets.elastic }}"
    fluentd:
      password: "{{ elasticsearch_secrets.fluentd }}"
      roles:
        - fluentd
    kibana:
      password: "{{ elasticsearch_secrets.kibana }}"
    logstash_system:
      password: "{{ elasticsearch_secrets.logstash_system }}"
    wai_es_admin:
      password: "{{ elasticsearch_secrets.wai_es_admin }}"
      roles:
        - wai_admin
        - kibana_user
    wai_es_user:
      password: "{{ elasticsearch_secrets.wai_es_user }}"
      roles:
        - wai_user
        - kibana_user
    portal_user:
      password: "{{ elasticsearch_secrets.portal_user }}"
      roles:
        - portal_user
es_roles:
  native:
    fluentd:
      cluster:
        - monitor
      indices:
        - names: 'logstash-*'
          privileges:
            - all
    wai_admin:
      cluster:
        - all
      indices:
        - names: '*'
          privileges:
            - all
    wai_user:
      indices:
        - names: '*'
          privileges:
            - read
    portal_user:
      indices:
        - names: 'wai-application-log*'
          privileges:
            - read
            - write
            - delete
            - create_index
es_config:
  node.name: "{{ ansible_hostname }}"
  network.host: "0.0.0.0"
  cluster.name: "wai-cluster"
  discovery.seed_hosts: '{{ groups["elastic"] | map("extract", hostvars, ["ansible_default_ipv4", "address"]) | list }}'
  http.port: 9200
  transport.port: 9300
  node.data: true
  node.master: true
  node.ingest: true
  bootstrap.memory_lock: true
  discovery.zen.minimum_master_nodes: 2
  xpack.monitoring.collection.enabled: true
  xpack.license.self_generated.type: basic
  cluster.initial_master_nodes: "{{ hostvars[groups['elastic'][0]]['ansible_hostname'] }}"
