---
# Compile K8S resources templates
- name: K8S .:. Create destination directories
  file:
    path: "{{ wai_k8s_deployment_dir }}/{{ item }}"
    state: directory
  with_items: "{{ wai_k8s_namespaces }}"

- name: K8S .:. Prepare cluster object deployment
  template:
    src: "{{ item }}"
    dest : "{{ wai_k8s_deployment_dir }}/{{ item | basename | regex_replace('.j2','') }}"
  with_fileglob:
    - templates/k8s/global/*.j2

- name: K8S .:. Calculate namespace dependant objects
  set_fact:
    namespace_file: "{{ namespace_file | default([]) + [ item ] }}"
  with_fileglob:
    - templates/k8s/namespace/*.j2

- name: K8S .:. Prepare namespace dependant deployment
  vars:
    item: "{{ filevar[0] }}"
  template:
    src: "{{ filevar[1] }}"
    dest : "{{ wai_k8s_deployment_dir }}/{{ filevar[0] }}/{{ filevar[1] | basename | regex_replace('.j2','') }}"
  with_nested:
    - "{{ wai_k8s_namespaces }}"
    - "{{ namespace_file }}"
  loop_control:
    loop_var: filevar

- name: WAI Infrastructure CA .:. Create destination directory for a fake CA [only local]
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ wai_infrastructure_ca.root_folder }}/crt"
    - "{{ wai_infrastructure_ca.root_folder }}/key"
    - "{{ wai_infrastructure_ca.root_folder }}/csr"

- name: WAI Infrastructure CA .:. Create a private key for a fake root certificate [only local]
  openssl_privatekey:
    path: "{{ wai_infrastructure_ca.root_folder }}/key/wai-ca.key"
    passphrase: "{{ wai_infrastructure_ca.secrets.ca_key_password }}"
    cipher: des3
    size: 4096
  when: inventory_hostname == 'localhost'

- name: WAI Infrastructure CA .:. Create a csr for a fake root certificate [only local]
  openssl_csr:
    path: "{{ wai_infrastructure_ca.root_folder }}/csr/wai-ca.csr"
    privatekey_passphrase: "{{ wai_infrastructure_ca.secrets.ca_key_password }}"
    privatekey_path: "{{ wai_infrastructure_ca.root_folder }}/key/wai-ca.key"
    country_name: IT
    state_or_province_name: Roma
    organization_name: AGID
    email_address: protocollo@pec.agid.gov.it
    common_name: AGID - Web Analytics Italia - Root CA
    basic_constraints: "CA:TRUE"
    basic_constraints_critical: true
    key_usage:
      - keyCertSign
      - cRLSign
      - digitalSignature
  when: inventory_hostname == 'localhost'

- name: WAI Infrastructure CA .:. Create a fake root certificate [only local]
  openssl_certificate:
    path: "{{ wai_infrastructure_ca.root_folder }}/crt/wai-ca.crt"
    provider: selfsigned
    csr_path: "{{ wai_infrastructure_ca.root_folder }}/csr/wai-ca.csr"
    privatekey_passphrase: "{{ wai_infrastructure_ca.secrets.ca_key_password }}"
    privatekey_path: "{{ wai_infrastructure_ca.root_folder }}/key/wai-ca.key"
    valid_in: 315360000
  when: inventory_hostname == 'localhost'

- name: K8S .:. Prepare infrastructure ca certificate config map
  vars:
    certificate_lines:  "{{ lookup('file', wai_infrastructure_ca.root_folder + '/crt/wai-ca.crt').splitlines() }}"
  template:
    src: "k8s/infrastructure-ca-cm.yml.j2"
    dest: "{{ wai_k8s_deployment_dir }}/{{ item }}/00_infrastruxture-ca-config-map.yml"
  with_items: "{{ wai_k8s_namespaces }}"

# Matomo Ingestion
- name: K8S .:. Prepare Matomo Ingestion deployment file
  vars:
    matomo_app_filename: "/matomo.php"
    matomo_name: "matomo-ingestion"
    matomo_pod_size_index: "matomo-ingestion"
    matomo_nginx_jailed: true
    matomo_create_ingress: true
    matomo_ingress_fqdn_index: "ingestion"
  template:
    dest: "{{ wai_k8s_deployment_dir }}/{{ item }}/99_matomo-ingestion.yml"
    src: k8s/jail/matomo-jail.yml.j2
  with_items: "{{ wai_k8s_namespaces }}"

# Matomo API
- name: K8S .:. Prepare Matomo API deployment file
  vars:
    matomo_app_filename: "/index.php"
    matomo_name: "matomo-api"
    matomo_pod_size_index: "matomo-api"
    matomo_nginx_jailed: true
    matomo_create_ingress: true
    matomo_ingress_fqdn_index: "api"
  template:
    dest: "{{ wai_k8s_deployment_dir }}/{{ item }}/99_matomo-api.yml"
    src: k8s/jail/matomo-jail.yml.j2
  with_items: "{{ wai_k8s_namespaces }}"

# Matomo Portal
- name: K8S .:. Prepare Matomo portal deployment file
  vars:
    matomo_app_filename: "/index.php"
    matomo_name: "matomo"
    matomo_pod_size_index: "matomo-portal"
    matomo_nginx_jailed: false
    matomo_create_ingress: false
    matomo_ingress_fqdn_index: "portal"
  template:
    dest: "{{ wai_k8s_deployment_dir }}/{{ item }}/99_matomo-portal.yml"
    src: k8s/jail/matomo-jail.yml.j2
  with_items: "{{ wai_k8s_namespaces }}"
