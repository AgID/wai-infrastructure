apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer-prod
  name: portal
  namespace: {{ item }}
spec:
  rules:
  - host: {{ wai_base_domain[item] }}
    http:
      paths:
      - backend:
          serviceName: portal-service
          servicePort: 80
        path: /
  tls:
  - hosts:
    - {{ wai_base_domain[item] }}
    secretName: portal-ingress-acme-tls
---
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer-prod
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    kubernetes.io/ingress.class: nginx
  name: matomo
  namespace: {{ item }}
spec:
  rules:
  - host: {{ wai_base_domain[item] }}
    http:
      paths:
      - backend:
          serviceName: matomo-service
          servicePort: 80
        path: /matomo/(.*)
  tls:
  - hosts:
    - {{ wai_base_domain[item] }}
    secretName: portal-ingress-acme-tls
---  
kind: ConfigMap
apiVersion: v1
metadata:
  name: portal-env-configmap
  namespace: {{ item }}
data:
  env: |-
    HOSTNAME={{ wai_base_domain[item] }}
    APP_NAME="Web Analytics Italia"
    APP_NAME_SHORT="WAI"
    APP_ENV=production
    APP_KEY={{ ansible_date_time.iso8601_micro | hash('sha1') }}
    APP_SALT={{ ansible_date_time.iso8601_micro | hash('sha1') }}
    APP_DEBUG=false
    APP_URL=https://{{ wai_base_domain[item] }}
    APP_VERSION=0.1

    LOG_CHANNEL=stack
    LOG_STACK_CHANNELS=stdout,slack
    LOG_SLACK_WEBHOOK_URL=http://
    LOG_SLACK_USERNAME=pippo

    CRON_AUTH_TOKEN={{ ansible_date_time.iso8601_micro | hash('sha1') }}

    PENDING_WEBSITE_WARNING=10
    PENDING_WEBSITE_REMOVE=15

    ARCHIVING_WEBSITE_WARNING=60
    ARCHIVING_WEBSITE_ARCHIVE=90
    ARCHIVING_WEBSITE_NOTIFICATION_WEEK_DAY=1
    ARCHIVING_WEBSITE_DAILY_NOTIFICATION=3

    DB_CONNECTION=mysql
    DB_HOST={{ wai_rdbms_load_balancer[item][0] }}
    DB_PORT=3306
    DB_DATABASE=wai
    DB_USERNAME=wai-user
    DB_PASSWORD={{ wai_database_password[item]['wai-users'] }}

    BROADCAST_DRIVER=log
    CACHE_DRIVER=redis
    CACHE_CONNECTION=cache-sentinel
    SESSION_DRIVER=redis
    SESSION_LIFETIME=120
    SESSION_CONNECTION=sessions-sentinel
    QUEUE_CONNECTION=redis
    QUEUE_REDIS_CONNECTION=queue-sentinel

    REDIS_HOST=application-redis
    REDIS_PASSWORD={{ redis_password.application_redis_master[item] }}
    REDIS_PORT=26379
    REDIS_QUEUE=default
    REDIS_REDISEARCH_HOST=application-redis
    REDIS_REDISEARCH_PASSWORD={{ redis_password.application_redis_master[item] }}
    REDIS_REDISEARCH_PORT=26379
    REDIS_SENTINELS=application-redis
    REDIS_SENTINEL_SERVICE=application-redis-master
    REDIS_INDEXES_USE_SENTINELS=true
    REDIS_REDISEARCH_USE_SENTINELS=true
    REDIS_REDISEARCH_SENTINELS=application-redis
    REDIS_REDISEARCH_SENTINEL_SERVICE=application-redis-master
    REDIS_CACHE_DB=1
    REDIS_SESSIONS_DB=2
    REDIS_QUEUE_DB=3

{% if wai_settings[item].mail is defined &&  wai_settings[item].mail.enabled %}    
    MAIL_DRIVER=smtp
    MAIL_HOST={{ wai_settings[item].mail.host }}
    MAIL_PORT={{ wai_settings[item].mail.port }}
    MAIL_USERNAME={{ wai_settings[item].mail.username }}
    MAIL_PASSWORD={{ wai_settings[item].mail.password }}
    MAIL_ENCRYPTION={{ wai_settings[item].mail.encryption }}
    MAIL_FROM_ADDRESS={{ wai_settings[item].mail.from_address }}
    MAIL_FROM_NAME="{{ wai_settings[item].mail.from_name }}"
{% endif %}

{% if wai_settings[item].pec is defined &&  wai_settings[item].pec.enabled %}    
    PEC_HOST={{ wai_settings[item].pec.host }}
    PEC_PORT={{ wai_settings[item].pec.port }}
    PEC_USERNAME={{ wai_settings[item].pec.user }}
    PEC_PASSWORD={{ wai_settings[item].pec.password }}
    PEC_ENCRYPTION={{ wai_settings[item].pec.encryption }}
{% endif %}

    ANALYTICS_ADMIN_TOKEN=token
    ANALYTICS_API_BASE_URL=http://portal-service
    ANALYTICS_API_SSL_VERIFY=true
    ANALYTICS_PUBLIC_URL=https://{{ wai_base_domain[item] }}/matomo

    ELASTICSEARCH_HOST=elasticsearch
    ELASTICSEARCH_PORT=9200
    ELASTICSEARCH_INDEX_PREFIX=prefix
    ELASTICSEARCH_INDEX_NAME=wai
    ELASTICSEARCH_IGNORE_EXCEPTIONS=true
    ELASTICSEARCH_SEARCH_TEMPLATE_NAME=search
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: portal-nginx-configmap
  namespace: {{ item }}
data:
  nginx.conf: |-
    user nginx;
    worker_processes  1;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
      worker_connections 1024;
    }
    http {
      upstream backend {
        server localhost:9000;
      }
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      gzip on;
      gzip_disable "msie6";
      server {
        listen 80;
        root /var/www/html/public;
        index index.php index.html index.htm;

        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "no-referrer-when-downgrade";

        location ~* \.(eot|otf|ttf|woff|woff2)$ {
            add_header Access-Control-Allow-Origin *;
        }

        location / {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
          root /usr/share/nginx/html;
        }

        location = /favicon.ico {
          log_not_found off;
          access_log off;
        }

        location ~ \.php$ {
          fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
          fastcgi_param  SERVER_SOFTWARE    nginx;
          fastcgi_param  QUERY_STRING       $query_string;
          fastcgi_param  REQUEST_METHOD     $request_method;
          fastcgi_param  CONTENT_TYPE       $content_type;
          fastcgi_param  CONTENT_LENGTH     $content_length;
          fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
          fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
          fastcgi_param  REQUEST_URI        $request_uri;
          fastcgi_param  DOCUMENT_URI       $document_uri;
          fastcgi_param  DOCUMENT_ROOT      $document_root;
          fastcgi_param  SERVER_PROTOCOL    $server_protocol;
          fastcgi_param  REMOTE_ADDR        $remote_addr;
          fastcgi_param  REMOTE_PORT        $remote_port;
          fastcgi_param  SERVER_ADDR        $server_addr;
          fastcgi_param  SERVER_PORT        $server_port;
          fastcgi_param  SERVER_NAME        $server_name;
          fastcgi_intercept_errors on;
          fastcgi_pass backend;
        }
        location ~* \.(jpg|jpeg|png|gif|svg|ico|css|js|pdf|woff|woff2)(\?id\=.+)?$ {
            expires max;
        }
        location ~ /\.ht {
            deny all;
        }
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: portal-service
  namespace: {{ item }}
spec:
  ports:
  - name: portal
    protocol: TCP
    port: 80
  selector:
    app: portal
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portal
  namespace: {{ item }}
spec:
  replicas: {{ wai_matomo_pod_size[item]['wai-portal']}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: portal
  template:
    metadata:
      labels:
        app: portal
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - portal
            topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: copy
        image: giafar/portal:dev4
        command: ["sh", "-c", "cp -R /var/www/html/* /html/ ; chown -R 33:33 /html/"]
        resources:
          limits:
            cpu: 0.1
            memory: "50Mi"
        volumeMounts:
        - mountPath: /html
          name: html
      containers:
      - image: giafar/portal:dev4
        name: portal
        resources:
          limits:
            cpu: "0.75"
            memory: "250Mi"
        ports:
        - containerPort: 9000
          name: fpm-port
        volumeMounts:
        - name: html
          mountPath: /var/www/html/
        - name: portal-env-conf
          mountPath: /var/www/html/.env
          subPath: env
      - image: nginx:1.15.8
        name: nginx
        resources:
          limits:
            cpu: "0.25"
            memory: "256Mi"
        args: ["nginx", "-g", "daemon off;", "-c", "/etc/config/nginx.conf"]
        ports:
        - containerPort: 80
          name: nginx
        volumeMounts:
        - name: portal-nginx-conf
          mountPath: /etc/config
        - name: html
          mountPath: /var/www/html
      volumes:
        - name: portal-nginx-conf
          configMap:
            name: portal-nginx-configmap
        - name: portal-env-conf
          configMap:
            name: portal-env-configmap
        - name: html
          emptyDir: {}
