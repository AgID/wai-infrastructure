---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ matomo_name }}
  namespace: {{ item }}
spec:
  replicas: {{ wai_matomo_pod_size[item][matomo_pod_size_index] }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: {{ matomo_name }}
  template:
    metadata:
      labels:
        app: {{ matomo_name }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ matomo_name }}
            topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: copy
        image: {{ wai_matomo_image }}:{{ 'latest' if item == 'wai-stag' else wai_matomo_image_tag }}
        command: ["sh", "-c", "cp -R /var/www/html/* /html/ ;  ; chown -R 33:33 /html/"]
        resources:
          limits:
            cpu: 0.1
            memory: "50Mi"
        volumeMounts:
        - mountPath: /html
          name: html
      containers:
      - image: {{ wai_matomo_image }}:{{ 'latest' if item == 'wai-stag' else wai_matomo_image_tag }}
        name: {{ matomo_name }}
        resources:
          limits:
            cpu: "0.75"
            memory: "250Mi"
        ports:
        - containerPort: 9000
          name: fpm-port
        readinessProbe:
          exec:
            command:
            - cat
            - /var/www/html/config/config.ini.php
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: html
          mountPath: /var/www/html/
        - name: {{ matomo_name }}-config
          mountPath: /var/www/html/config/config.ini.php
          subPath: config.ini.php
      - image: nginx:1.15.8
        name: nginx
        resources:
          limits:
            cpu: "0.25"
            memory: "256Mi"
        args: ["nginx", "-g", "daemon off;", "-c", "/etc/config/nginx.conf"]
        ports:
        - containerPort: 80
          name: nginx
        livenessProbe:
          httpGet:
            {% if matomo_nginx_jailed is defined and matomo_nginx_jailed %}
            path: {{ matomo_app_filename }} 
            {% else %}
            path: /index.php
            {% endif %}
            port: nginx
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
        volumeMounts:
        - name: {{ matomo_name }}-nginx-conf
          mountPath: /etc/config/
        - name: html
          mountPath: /var/www/html
      volumes:
        - name: {{ matomo_name }}-config
          configMap: 
            name: matomo-php-config
        - name: {{ matomo_name }}-nginx-conf
          configMap: 
            name: {{ matomo_name }}-nginx-configmap
        - name: html
          emptyDir: {}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ matomo_name }}-nginx-configmap
  namespace: {{ item }}
data:
  nginx.conf: |-
    user nginx;
    worker_processes  1;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
      worker_connections 1024;
    }
    http {
      upstream backend {
        server localhost:9000;
      }
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      gzip on;
      gzip_disable "msie6";    
      server {
        listen 80;
        root /var/www/html/;
        {% if matomo_nginx_jailed is defined and not matomo_nginx_jailed %}
        
        location / {
          try_files $uri $uri/ =404;
        }
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
          root /usr/share/nginx/html;
        }

        location = /favicon.ico {
          log_not_found off;
          access_log off;
        }
        {% endif %}

        {% if matomo_nginx_jailed is defined and matomo_nginx_jailed %}
        location = {{ matomo_app_filename }} {
        {% else %}

        location ~ \.php$ {
        {% endif %}
          fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
          fastcgi_param  SERVER_SOFTWARE    nginx;
          fastcgi_param  QUERY_STRING       $query_string;
          fastcgi_param  REQUEST_METHOD     $request_method;
          fastcgi_param  CONTENT_TYPE       $content_type;
          fastcgi_param  CONTENT_LENGTH     $content_length;
          fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
          fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
          fastcgi_param  REQUEST_URI        $request_uri;
          fastcgi_param  DOCUMENT_URI       $document_uri;
          fastcgi_param  DOCUMENT_ROOT      $document_root;
          fastcgi_param  SERVER_PROTOCOL    $server_protocol;
          fastcgi_param  REMOTE_ADDR        $remote_addr;
          fastcgi_param  REMOTE_PORT        $remote_port;
          fastcgi_param  SERVER_ADDR        $server_addr;
          fastcgi_param  SERVER_PORT        $server_port;
          fastcgi_param  SERVER_NAME        $server_name;
          fastcgi_param  HTTP_X_FORWARDED_URI '{{ wai_portal_matomo_sub_path }}';
          fastcgi_intercept_errors on;
          fastcgi_pass backend;
        }

        {% if matomo_nginx_jailed is defined and matomo_nginx_jailed %}
        
        location ~* {
          deny all;
        }
        {% endif %}

      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: {{ matomo_name }}-service
  namespace: {{ item }}
spec:
  ports:
  - name: matomo
    protocol: TCP
    port: 80
  selector:
    app: {{ matomo_name }}
{% if matomo_create_ingress is defined and matomo_create_ingress %}    
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ matomo_name }}
  namespace: {{ item }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer-prod    
    {% if matomo_enable_session is defined and matomo_enable_session %}
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    {% endif %}

spec:
  tls:
  - hosts:
    - {{ wai_hostname[matomo_ingress_fqdn_index] }}.{{ wai_base_domain[item] }}
    secretName: ingress-acme-tls
  rules:
    - host: {{ wai_hostname[matomo_ingress_fqdn_index] }}.{{ wai_base_domain[item] }}
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ matomo_name }}-service
              servicePort: 80
{% endif %}                  
