apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer-{{ item }}
    kubernetes.io/ingress.class: nginx-{{ item }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Backend matomo;
    nginx.ingress.kubernetes.io/rewrite-target: /matomo/$2
  name: api-matomo
  namespace: {{ item }}
spec:
  rules:
  - host: {{ wai_hostname['api'] }}.{{ wai_base_domain[item] }}
    http:
      paths:
      - backend:
          serviceName: kong-service
          servicePort: 8000
        path: /matomo(/|$)(.*)
  tls:
  - hosts:
    - {{ wai_hostname['api'] }}.{{ wai_base_domain[item] }}
    secretName: api-ingress-acme-tls
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer-{{ item }}
    kubernetes.io/ingress.class: nginx-{{ item }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Backend kong;
  name: api-kong
  namespace: {{ item }}
spec:
  rules:
  - host: {{ wai_hostname['api'] }}.{{ wai_base_domain[item] }}
    http:
      paths:
      - backend:
          serviceName: kong-service
          servicePort: 8000
        path: /
  tls:
  - hosts:
    - {{ wai_hostname['api'] }}.{{ wai_base_domain[item] }}
    secretName: api-ingress-acme-tls
---
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: api-env-configmap
  namespace: {{ item }}
data:
  env: |
    MATOMO_SERVICE_URL=http://matomo-api-service
    MATOMO_ADMIN_TOKEN_AUTH={{ matomo_vars.super_user.token }}
    PORT_PROD=7080
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: {{ item }}
spec:
  ports:
  - name: http
    protocol: TCP
    port: 7080
  selector:
    app: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: {{ item }}
spec:
  replicas: {{ wai_api_pod_size[item] }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      annotations:
        releaseDate: now
      labels:
        app: api
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - api
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: {{ wai_api_image }}:{{ 'latest' if item == 'wai-stag' else wai_api_image_tag }}
        imagePullPolicy: {{ 'Always' if item == 'wai-stag' else 'IfNotPresent' }}
        name: api
        resources:
          limits:
            cpu: "0.250"
            memory: "256Mi"
        ports:
        - containerPort: 7080
          name: http
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: api-env-configmap
          mountPath: /home/node/app/.env
          subPath: env
      volumes:
        - name: api-env-configmap
          configMap:
            name: api-env-configmap
            defaultMode: 0755
