---
# Deploy K8S WAI Resources
- hosts: kube-master[0]
  tasks:
    - include_vars:
        file: password.yml

    # Base objects
    - name: K8S .:. Create destination directory
      file:
        path: "{{ wai_k8s_deployment_dir }}"
        state: directory

    - name: K8S .:. Prepare base objects template
      template:
        dest: "{{ wai_k8s_deployment_dir }}/k8s-deployment.yml"
        src: k8s/k8s-deployment.yml.j2

    - name: K8S .:. Deploy base objects template
      kube:
        name: "k8s-deployment"
        kubectl: "{{ wai_kubectl }}"
        state: "latest"
        filename: "{{ wai_k8s_deployment_dir }}/k8s-deployment.yml"

    # GlusterFS
    - name: K8S .:. Prepare GlusterFS endpoints
      template:
        dest: "{{ wai_k8s_deployment_dir }}/glusterfs-{{ item }}.yml"
        src: k8s/glusterfs.yml.j2
      with_items: "{{ wai_k8s_namespaces }}"

    - name: K8S .:. Deploy GlusterFS
      kube:
        name: "glusterfs-{{ item }}"
        namespace: "{{ item }}"
        kubectl: "{{ wai_kubectl }}"
        state: "latest"
        filename: "{{ wai_k8s_deployment_dir }}/glusterfs-{{ item }}.yml"
      with_items: "{{ wai_k8s_namespaces }}"

    # Kube State Metrics
    - name: K8S .:. Download Kube State Metrics
      get_url:
        url: "{{ wai_kube_state_metrics }}"
        dest: "{{ wai_k8s_deployment_dir }}/kube-state-metrics-{{ wai_kube_state_metrics_version }}.zip"

    - name: K8S .:. Extract Kube State Metrics
      unarchive:
        src: "{{ wai_k8s_deployment_dir }}/kube-state-metrics-{{ wai_kube_state_metrics_version }}.zip"
        dest: "{{ wai_k8s_deployment_dir }}"
        remote_src: yes

    - name: K8S .:. Enumerate Kube State Metrics in {{ wai_k8s_deployment_dir }}/{{ wai_kube_state_metrics_output_dir }}/kubernetes
      find:
        paths: "{{ wai_k8s_deployment_dir }}/{{ wai_kube_state_metrics_output_dir }}/kubernetes"
        patterns: "*.yml,*.yaml"
      register: ksm_deployment_files

    - name: K8S .:. Deploy Kube State Metrics
      kube:
        name: "kube-state-metrics"
        kubectl: "{{ wai_kubectl }}"
        state: "latest"
        filename: "{{ item.path }}"
      with_items:
        - "{{ ksm_deployment_files.files }}"

    # Metricbeat
    - name: K8S .:. Configure Elasticsearch hosts for metricbeat
      set_fact:
        elastic_url: "http://{{item}}:9200"
      with_items: '{{ groups["elastic"] | map("extract", hostvars, ["ansible_default_ipv4", "address"]) | list }}'
      register: kibana_elastic_hosts_list

    - name: K8S .:. Build Elasticsearch host array
      set_fact:
        kibana_elastic_hosts: '{{kibana_elastic_hosts_list.results | map(attribute="ansible_facts.elastic_url") | list | to_yaml}}'

    - name: K8S .:. Prepare Metricbeat DaemonSet and services
      template:
        dest: "{{ wai_k8s_deployment_dir }}/metricbeat.yml"
        src: k8s/metricbeat.yml.j2

    - name: K8S .:. Deploy Metricbeat DaemonSet and services
      kube:
        name: "metricbeat"
        kubectl: "{{ wai_kubectl }}"
        state: "latest"
        filename: "{{ wai_k8s_deployment_dir }}/metricbeat.yml"

    # Deploy Ingress controller
    - name: K8S .:. Prepare Ingress controller deployment file
      template:
        dest: "{{ wai_k8s_deployment_dir }}/ingress-controller.yml"
        src: k8s/ingress-controller.yml.j2

    - name: K8S .:. Deploy Ingress controller
      kube:
        kubectl: "{{ wai_kubectl }}"
        state: "latest"
        filename: "{{ wai_k8s_deployment_dir }}/ingress-controller.yml"

    # Deploy K8S matomo default configmap
    - name: K8S .:. Prepare Matomo configmap deployment file
      template:
        dest: "{{ wai_k8s_deployment_dir }}/matomo-config-map.yml"
        src: k8s/matomo-config-map.yml.j2

    - name: K8S .:. Deploy Matomo config map
      kube:
        name: "matomo-php-config-map"
        kubectl: "{{ wai_kubectl }}"
        filename: "{{ wai_k8s_deployment_dir }}/matomo-config-map.yml"
        state: "latest"

    # Deploy K8S matomo secrets
    - name: K8S .:. Prepare matomo secrets
      template:
        dest: "{{ wai_k8s_deployment_dir }}/matomo-secrets.yml"
        src: k8s/matomo-secrets.yml.j2
      
    - name: K8S .:. Deploy Matomo secrets
      kube:
        name: "matomo-secrets"
        kubectl: "{{ wai_kubectl }}"
        filename: "{{ wai_k8s_deployment_dir }}/matomo-secrets.yml"
        state: "latest"

    # Matomo Ingestion
    - name: K8S .:. Prepare Matomo Ingestion template vars
      set_fact:
        matomo_app_filename: "/piwik.php"
        matomo_name: "matomo-ingestion"
        matomo_pod_size_index: "matomo-ingestion"
        matomo_nginx_jailed: true
        matomo_create_ingress: true
        matomo_enable_session: false
        matomo_ingress_fqdn_index: "ingestion"
        matomo_database_user: "matomo-admin"
        matomo_database_host: "FAKEHOST" # TO BE FIXED

    - name: K8S .:. Prepare Matomo Ingestion deployment file
      template:
        dest: "{{ wai_k8s_deployment_dir }}/matomo-ingestion.yml"
        src: k8s/matomo-jail.yml.j2

    - name: K8S .:. Deploy Matomo Ingestion
      kube:
        name: "{{ matomo_name }}"
        kubectl: "{{ wai_kubectl }}"
        filename: "{{ wai_k8s_deployment_dir }}/matomo-ingestion.yml"
        state: "latest"

    # Matomo API
    - name: K8S .:. Prepare Matomo API template vars
      set_fact:
        matomo_app_filename: "/index.php"
        matomo_name: "matomo-api"
        matomo_pod_size_index: "matomo-api"
        matomo_nginx_jailed: true
        matomo_create_ingress: false
        matomo_enable_session: false
        matomo_database_user: "matomo-admin"
        matomo_database_host: "FAKEHOST" # TO BE FIXED

    - name: K8S .:. Prepare Matomo API deployment file
      template:
        dest: "{{ wai_k8s_deployment_dir }}/matomo-nginx-api.yml"
        src: k8s/matomo-jail.yml.j2

    - name: K8S .:. Deploy Matomo API
      kube:
        name: "{{ matomo_name }}"
        kubectl: "{{ wai_kubectl }}"
        filename: "{{ wai_k8s_deployment_dir }}/matomo-nginx-api.yml"
        state: "latest"

    # Matomo Worker
    - name: K8S .:. Prepare Matomo Worker template
      set_fact:
        matomo_pod_size_index: "matomo-worker"
        matomo_database_user: "matomo-admin"
        matomo_database_host: "FAKEHOST" # TO BE FIXED

    - name: K8S .:. Prepare Matomo Worker deployment file
      template:
        dest: "{{ wai_k8s_deployment_dir }}/matomo-worker.yml"
        src: k8s/matomo-worker.yml.j2

    - name: K8S .:. Deploy Matomo Worker
      kube:
        name: "matomo-worker"
        kubectl: "{{ wai_kubectl }}"
        filename: "{{ wai_k8s_deployment_dir }}/matomo-worker.yml"
        state: "latest"
