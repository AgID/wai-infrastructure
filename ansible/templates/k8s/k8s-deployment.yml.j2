---
# K8S Namespaces
{% for ns in wai_k8s_namespaces %}
apiVersion: v1
kind: Namespace
metadata:
   name: {{ ns }}
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: resource-quota-{{ ns }}
  namespace: {{ ns }}
spec:
  hard:
    requests.cpu: "10" 
    requests.memory: 10Gi 
    limits.cpu: "20" 
    limits.memory: 20Gi 
---
{% endfor %}
# K8S shared roles
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cluster-role-view-access
rules:
- apiGroups: ["", "extensions", "apps"]
  resources:
    - componentstatuses
    - configmaps
    - daemonsets
    - deployments
    - events
    - endpoints
    - horizontalpodautoscalers
    - ingress
    - jobs
    - limitranges
    - namespaces
    - nodes
    - pods
    - persistentvolumes
    - persistentvolumeclaims
    - replicasets
    - replicationcontrollers
    - secrets
    - serviceaccounts
    - services
  verbs: ["get", "watch", "list"]
- apiGroups: ["batch"]
  resources:
  - jobs
  - cronjobs
  verbs: ["get", "list"]
---
# K8S Service Account
{% for ns in wai_k8s_namespaces %}
apiVersion: v1
kind: ServiceAccount
metadata:
  name:  {{ ns }}-view-account
  namespace: {{ ns }}
---
{% endfor %}
# K8S Roles binding and security
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cluster-role-view-access-binding
  namespace: kube-system
subjects:
{% for ns in wai_k8s_namespaces %}
- kind: ServiceAccount
  name: {{ ns }}-view-account
  namespace: {{ ns }}
{% endfor %}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-role-view-access
